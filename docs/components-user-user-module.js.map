{"version":3,"sources":["webpack:///./src/app/components/user/edit-survey/edit-question.service.ts","webpack:///./src/app/components/user/edit-survey/edit-survey-edit-mode/edit-survey-edit-mode.component.html","webpack:///./src/app/components/user/edit-survey/edit-survey-edit-mode/edit-survey-edit-mode.component.scss","webpack:///./src/app/components/user/edit-survey/edit-survey-edit-mode/edit-survey-edit-mode.component.ts","webpack:///./src/app/components/user/edit-survey/edit-survey-question/edit-survey-question.component.html","webpack:///./src/app/components/user/edit-survey/edit-survey-question/edit-survey-question.component.scss","webpack:///./src/app/components/user/edit-survey/edit-survey-question/edit-survey-question.component.ts","webpack:///./src/app/components/user/edit-survey/edit-survey.component.html","webpack:///./src/app/components/user/edit-survey/edit-survey.component.scss","webpack:///./src/app/components/user/edit-survey/edit-survey.component.ts","webpack:///./src/app/components/user/edit-survey/item-type.enum.ts","webpack:///./src/app/components/user/edit-user/edit-user.component.html","webpack:///./src/app/components/user/edit-user/edit-user.component.scss","webpack:///./src/app/components/user/edit-user/edit-user.component.ts","webpack:///./src/app/components/user/survey-user.resolver.ts","webpack:///./src/app/components/user/user-form-name.enum.ts","webpack:///./src/app/components/user/user-personal-detail/user-personal-detail.component.html","webpack:///./src/app/components/user/user-personal-detail/user-personal-detail.component.scss","webpack:///./src/app/components/user/user-personal-detail/user-personal-detail.component.ts","webpack:///./src/app/components/user/user-wrapper/user-wrapper.component.html","webpack:///./src/app/components/user/user-wrapper/user-wrapper.component.scss","webpack:///./src/app/components/user/user-wrapper/user-wrapper.component.ts","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/components/user/user.component.scss","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/components/user/user.module.ts","webpack:///./src/app/components/user/user.routing.ts"],"names":[],"mappings":"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","file":"components-user-user-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { IAnswer, IAnswerWithType } from '../../create-survey/create-survey.interface';\r\nimport { ItemType } from './item-type.enum';\r\nimport { map } from 'lodash';\r\nimport { HttpService } from '../../../core/http/http.service';\r\nimport { Observable } from 'rxjs';\r\nimport { RequestsContants } from '../../../shared/constants/requests.contants';\r\nimport { RequestTypes } from '../../../core/http/http.enum';\r\nimport { ViewType } from '../../../../../projects/ac-login/src/lib/shared/enums/view-type.enum';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { AlertService } from 'ngx-alerts';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { SurveysService } from '../../../core/surveys/surveys.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EditQuestionService {\r\n\r\n  constructor(private httpService: HttpService, private alertService: AlertService, private surveyService: SurveysService) {\r\n  }\r\n\r\n  editItem(value: IAnswerWithType[], id: number): Observable<any> {\r\n    return this.httpService.httpRequest(RequestsContants.SURVEYS.EDIT, RequestTypes.POST, {\r\n      queryObj: this.mapAnswerToChanged(value),\r\n    }).pipe(\r\n      tap((response: HttpResponse<{message: string}>) => this.alertService.success(response.body.message)),\r\n      switchMap(() => this.surveyService.fetchOneSurvey(id))\r\n    );\r\n  }\r\n\r\n  private mapAnswerToChanged(answers: IAnswerWithType[]) {\r\n    return map(answers, ({content, id, type}: IAnswerWithType) => ({\r\n      change: content,\r\n      id,\r\n      item: type,\r\n    }));\r\n  }\r\n}\r\n\r\n","module.exports = \"<div *ngIf=\\\"!isEditAnswer; else editAnswer\\\"\\r\\n     class=\\\"display-flex\\\">\\r\\n  <div>\\r\\n    <p><b>{{prefix}}<span *ngIf=\\\"isChanged()\\\"> oryginalne</span> :</b>{{answer.content}}</p>\\r\\n    <p *ngIf=\\\"isChanged()\\\"><b>{{prefix}} po zmianie:</b> {{editAnswerCopy.content}}</p>\\r\\n  </div>\\r\\n  <p (click)=\\\"isEditAnswer = true\\\">{{isChanged() ? 'Powróć do edycji' : 'Edytuj'}}</p>\\r\\n</div>\\r\\n<ng-template #editAnswer>\\r\\n  <mat-form-field class=\\\"width-100\\\">\\r\\n    <input matInput\\r\\n           [(ngModel)]=\\\"editAnswerCopy.content\\\"\\r\\n           [placeholder]=\\\"answer.content\\\">\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"display-flex\\\">\\r\\n    <button mat-stroked-button\\r\\n            (click)=\\\"submitChanges()\\\"\\r\\n            color=\\\"primary\\\">\\r\\n      Zapisz zmiany\\r\\n    </button>\\r\\n    <button mat-stroked-button\\r\\n            (click)=\\\"cancelChanges()\\\"\\r\\n            color=\\\"warn\\\">\\r\\n      Anuluj zmiany\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","module.exports = \".display-flex {\\n  justify-content: space-between; }\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { cloneDeep, isEqual } from 'lodash';\r\nimport { IAnswer } from '../../../create-survey/create-survey.interface';\r\n\r\n@Component({\r\n  selector: 'ac-edit-survey-edit-mode',\r\n  templateUrl: './edit-survey-edit-mode.component.html',\r\n  styleUrls: ['./edit-survey-edit-mode.component.scss']\r\n})\r\nexport class EditSurveyEditModeComponent implements OnInit {\r\n  @Input('answer') set setAnswer(value: IAnswer) {\r\n    this.answer = value;\r\n    this.editAnswerCopy = cloneDeep(value);\r\n  }\r\n  @Input() prefix: string = '';\r\n  @Output() onSubmit: EventEmitter<IAnswer> = new EventEmitter();\r\n  @Output() onRemoveFromChanged: EventEmitter<IAnswer> = new EventEmitter();\r\n  editAnswerCopy: IAnswer;\r\n  answer: IAnswer;\r\n  isEditAnswer: boolean = false;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  submitChanges() {\r\n    this.isEditAnswer = false;\r\n\r\n    if(this.isChanged()) {\r\n      this.onSubmit.emit(this.editAnswerCopy);\r\n    } else {\r\n      this.onRemoveFromChanged.emit(this.editAnswerCopy);\r\n    }\r\n  }\r\n\r\n  cancelChanges() {\r\n    this.editAnswerCopy = cloneDeep(this.answer);\r\n\r\n    this.isEditAnswer = false;\r\n    this.onRemoveFromChanged.emit(this.editAnswerCopy);\r\n  }\r\n\r\n  isChanged(): boolean {\r\n    return !isEqual(this.answer, this.editAnswerCopy);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"edit-wrapper\\\">\\r\\n  <mat-divider></mat-divider>\\r\\n  <div class=\\\"padding-bottom-10px padding-top-10px\\\">\\r\\n    <ac-edit-survey-edit-mode [answer]=\\\"{id: question.id, content: question.content}\\\"\\r\\n                              [prefix]=\\\"'Pytanie'\\\"\\r\\n                              (onRemoveFromChanged)=\\\"removeFromChanged($event)\\\"\\r\\n                              (onSubmit)=\\\"addToChanged($event, itemType.QUESTION)\\\"></ac-edit-survey-edit-mode>\\r\\n  </div>\\r\\n  <mat-divider></mat-divider>\\r\\n  <p class=\\\"padding-top-10px\\\"><b> Odpowiedzi: </b></p>\\r\\n  <div *ngFor=\\\"let answer of question.answers; let i = index\\\">\\r\\n    {{i + 1}})\\r\\n    <ac-edit-survey-edit-mode [answer]=\\\"answer\\\"\\r\\n                              [prefix]=\\\"'Odpowiedź'\\\"\\r\\n                              (onRemoveFromChanged)=\\\"removeFromChanged($event)\\\"\\r\\n                              (onSubmit)=\\\"addToChanged($event, itemType.ANSWER)\\\"></ac-edit-survey-edit-mode>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".edit-wrapper {\\n  padding: 30px; }\\n\\n.display-flex {\\n  justify-content: space-between; }\\n\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { IAnswer, IAnswerWithType, IQuestion } from '../../../create-survey/create-survey.interface';\r\nimport { ItemType } from '../item-type.enum';\r\nimport { find, remove} from 'lodash';\r\n\r\n@Component({\r\n  selector: 'ac-edit-survey-question',\r\n  templateUrl: './edit-survey-question.component.html',\r\n  styleUrls: ['./edit-survey-question.component.scss']\r\n})\r\nexport class EditSurveyQuestionComponent {\r\n  @Input() question: IQuestion;\r\n  @Output() onChanged: EventEmitter<IAnswerWithType[]> = new EventEmitter();\r\n  readonly itemType = ItemType;\r\n  private changedItems: IAnswerWithType[] = [];\r\n\r\n  removeFromChanged(changed: IAnswer) {\r\n    remove(this.changedItems, {id: changed.id});\r\n\r\n    this.onChanged.emit(this.changedItems);\r\n  }\r\n\r\n  addToChanged(changed: IAnswer, type: ItemType) {\r\n    const newValue: IAnswerWithType =  {...changed, type};\r\n    let foundChangedItem: IAnswerWithType = find(this.changedItems, {id: changed.id});\r\n\r\n    if(foundChangedItem) {\r\n      foundChangedItem = newValue;\r\n    } else{\r\n      this.changedItems.push(newValue);\r\n    }\r\n\r\n    this.onChanged.emit(this.changedItems);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"profile-bg\\\"\\r\\n     [style.background-image]=\\\"'url(' + backgroundUrl + ')'\\\">\\r\\n  <div class=\\\"profile-bg-content\\\">\\r\\n    <h1>Edycja ankiety: <b>{{survey?.response.title}}</b> ({{survey?.response.category?.name}})</h1>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"profile-details-wrapper margin-bottom-30px\\\">\\r\\n  <mat-card class=\\\"profile-details\\\">\\r\\n    <mat-expansion-panel>\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          Edycja:\\r\\n        </mat-panel-title>\\r\\n      </mat-expansion-panel-header>\\r\\n\\r\\n      <ac-loader *ngIf=\\\"isLoading; else editSurveySection\\\"></ac-loader>\\r\\n      <ng-template #editSurveySection>\\r\\n        <ac-edit-survey-edit-mode [answer]=\\\"{id: survey?.response.id, content: survey?.response.title}\\\"\\r\\n                                  [prefix]=\\\"'Tytuł'\\\"\\r\\n                                  (onRemoveFromChanged)=\\\"removeTitleFromChanged()\\\"\\r\\n                                  (onSubmit)=\\\"addToChangedAndMap($event, itemType.SURVEY)\\\"></ac-edit-survey-edit-mode>\\r\\n        <div *ngFor=\\\"let question of survey?.response.question; let i = index\\\">\\r\\n          <ac-edit-survey-question [question]=\\\"question\\\"\\r\\n                                   (onChanged)=\\\"addToChanged($event, i)\\\"></ac-edit-survey-question>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n    </mat-expansion-panel>\\r\\n    <div class=\\\"margin-top-20px\\\">\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>\\r\\n            Statystyki ankiety:\\r\\n          </mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n\\r\\n\\r\\n\\r\\n        <div *ngFor=\\\"let statQuestion of statisticks\\\">\\r\\n          <div class=\\\"edit-wrapper\\\">\\r\\n            <mat-divider></mat-divider>\\r\\n            <div class=\\\"padding-bottom-10px padding-top-10px\\\">\\r\\n              <p><b>Pytanie: </b>{{statQuestion.content}}</p>\\r\\n            </div>\\r\\n            <mat-divider></mat-divider>\\r\\n            <p class=\\\"padding-top-10px\\\"><b> Odpowiedzi: </b></p>\\r\\n            <div *ngFor=\\\"let answer of statQuestion.answers; let i = index\\\">\\r\\n              <div class=\\\"display-flex\\\">\\r\\n                <p>{{i + 1}}) {{answer.content}}</p>\\r\\n                <p>Ilość odp: {{answer.sum}}</p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      </mat-expansion-panel>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"fixed-on-left\\\">\\r\\n<button *ngIf=\\\"isChanged()\\\"\\r\\n        (click)=\\\"saveChanged()\\\"\\r\\n        mat-flat-button\\r\\n        color=\\\"primary\\\">Zapisz zmiany w ankiecie</button>\\r\\n<button (click)=\\\"removeSurvey()\\\"\\r\\n        mat-flat-button\\r\\n        [class.margin-left-20px]=\\\"isChanged()\\\"\\r\\n        color=\\\"warn\\\">Usuń ankietę</button>\\r\\n</div>\\r\\n\"","module.exports = \".profile-details {\\n  max-width: 1200px;\\n  margin: auto;\\n  position: relative;\\n  z-index: 10;\\n  -webkit-transform: translateY(-20px);\\n          transform: translateY(-20px); }\\n  .profile-details-wrapper {\\n    padding: 0 30px; }\\n  .profile-bg {\\n  position: relative;\\n  height: 60vh;\\n  width: 100vw;\\n  background-position: center;\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n  .profile-bg-content {\\n    position: absolute;\\n    z-index: 2;\\n    color: #fff;\\n    top: 50%;\\n    left: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%); }\\n  .profile-bg-content h1 {\\n      font-size: 50px;\\n      font-weight: 900;\\n      letter-spacing: 3px; }\\n  .profile-bg:after {\\n    content: \\\"\\\";\\n    display: block;\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    z-index: 1;\\n    top: 0;\\n    left: 0;\\n    background-color: rgba(0, 0, 0, 0.4); }\\n  .fixed-on-left {\\n  position: fixed;\\n  left: 20px;\\n  bottom: 20px;\\n  z-index: 444; }\\n  .display-flex {\\n  justify-content: space-between; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  IStatisticks, IStatisticksAnswerMapped,\r\n  IStatisticksMapped,\r\n  ISurvey, ISurveyAnswer,\r\n  ISurveyQuestion\r\n} from '../../../shared/interfaces/result.interface';\r\nimport { cloneDeep, find, map, get, toNumber, isNil, set, reduce, isEmpty, merge } from 'lodash';\r\nimport { ActivatedRoute, ParamMap, Route, Router } from '@angular/router';\r\nimport { finalize, switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { SurveysService } from '../../../core/surveys/surveys.service';\r\nimport { SurveyType } from '../../../core/surveys/surveys-type.enum';\r\nimport { IAnswer, IAnswerWithType } from '../../create-survey/create-survey.interface';\r\nimport { IDictionary } from '../../../shared/interfaces/utils.interfaces';\r\nimport { ItemType } from './item-type.enum';\r\nimport { EditQuestionService } from './edit-question.service';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ac-edit-survey',\r\n  templateUrl: './edit-survey.component.html',\r\n  styleUrls: ['./edit-survey.component.scss']\r\n})\r\nexport class EditSurveyComponent implements OnInit, OnDestroy {\r\n  survey: ISurvey;\r\n  surveyCloned: ISurvey;\r\n  backgroundUrl: string = 'assets/mainpage.jpg';\r\n  isLoading: boolean = false;\r\n  statisticks: IStatisticksMapped[];\r\n  readonly itemType = ItemType;\r\n  private onDestroy: Subject<boolean> = new Subject<boolean>();\r\n  private changedItems: IDictionary<IAnswerWithType[]> = {};\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n              private surveyService: SurveysService,\r\n              private editQuestionService: EditQuestionService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe((params: ParamMap) => {\r\n      this.survey = find(this.surveyService.getSurveysValue(SurveyType.USER), {id: toNumber(params.get('id'))});\r\n\r\n      if(isNil(this.survey)) {\r\n        this.router.navigateByUrl('profile');\r\n      } else {\r\n        this.surveyCloned = cloneDeep(this.survey);\r\n\r\n        this.surveyService.getStatisticks(this.survey.id as number)\r\n          .pipe(takeUntil(this.onDestroy))\r\n          .subscribe((statisticks: IDictionary<IStatisticks>) => {\r\n            const newStatistics: IStatisticksMapped[] = map(statisticks, (mapped: IStatisticks) => {\r\n              const foundQuestion: ISurveyQuestion = find(this.survey.response.question, {id: mapped.question_id});\r\n              const mappedAnswers: IStatisticksAnswerMapped[] =  map(mapped.answers, (answer: {answer_id: number, sum: number}) => {\r\n                const foundAnswer: ISurveyAnswer = find(foundQuestion.answers, {id: answer.answer_id});\r\n\r\n                set(answer, 'content', foundAnswer.content);\r\n\r\n                return answer;\r\n              });\r\n\r\n              set(mapped, 'content', foundQuestion.content);\r\n              set(mapped, 'answers', mappedAnswers);\r\n\r\n              return mapped;\r\n            });\r\n\r\n            console.log(newStatistics);\r\n\r\n            this.statisticks = newStatistics;\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDestroy.next();\r\n    this.onDestroy.complete();\r\n    this.onDestroy.unsubscribe();\r\n  }\r\n\r\n  removeSurvey() {\r\n    this.isLoading = true;\r\n    this.surveyService.removeSurvey(this.survey.id as number).subscribe(() => {\r\n      this.isLoading = false;\r\n\r\n      this.router.navigateByUrl('profile');\r\n    });\r\n  }\r\n\r\n  saveChanged() {\r\n    if(this.isChanged()) {\r\n      this.isLoading = true;\r\n      const reductedChangedItems: IAnswerWithType[] = reduce(this.changedItems, function(result, value) {\r\n        return merge(result, value);\r\n      }, []);\r\n\r\n      this.editQuestionService.editItem(reductedChangedItems, this.survey.id as number)\r\n        .pipe(finalize(() => {\r\n          this.isLoading = false;\r\n        })).subscribe(() => {\r\n          this.survey = find(this.surveyService.getSurveysValue(SurveyType.USER), {id: this.survey.id});\r\n          this.surveyCloned = cloneDeep(this.survey);\r\n          this.changedItems = {};\r\n        });\r\n    }\r\n  }\r\n\r\n  removeTitleFromChanged() {\r\n    delete this.changedItems.title;\r\n  }\r\n\r\n\r\n  addToChangedAndMap(values: IAnswer, type: ItemType) {\r\n    const afterMapped: IAnswerWithType[] = [{...values, type}];\r\n\r\n    this.addToChanged(afterMapped, 'title');\r\n  }\r\n\r\n  addToChanged(values: IAnswerWithType[], index: number | string) {\r\n    if(values.length) {\r\n      set(this.changedItems, index, values);\r\n    } else if(get(this.changedItems, `[${index}]`)) {\r\n      delete this.changedItems[index];\r\n    }\r\n  }\r\n\r\n  isChanged() {\r\n    return !isEmpty(this.changedItems);\r\n  }\r\n}\r\n","export enum ItemType {\r\n  SURVEY = 0,\r\n  ANSWER = 1,\r\n  QUESTION = 2,\r\n}\r\n","module.exports = \"<mat-list [formGroup]=\\\"form\\\">\\n  <h3 mat-subheader>Dane personalne</h3>\\n  <ac-user-personal-detail [formControlName]=\\\"userFormName.NAME\\\"\\n                           [oryginalValue]=\\\"clonedUser.name\\\"\\n                           [title]=\\\"'Imie: '\\\"></ac-user-personal-detail>\\n  <ac-user-personal-detail [formControlName]=\\\"userFormName.SURNAME\\\"\\n                           [oryginalValue]=\\\"clonedUser.surname\\\"\\n                           [title]=\\\"'Nazwisko: '\\\"></ac-user-personal-detail>\\n  <ac-user-personal-detail [formControlName]=\\\"userFormName.EMAIL\\\"\\n                           [oryginalValue]=\\\"clonedUser.email\\\"\\n                           [title]=\\\"'Email: '\\\"></ac-user-personal-detail>\\n  <ac-user-personal-detail [formControlName]=\\\"userFormName.AGE\\\"\\n                           [oryginalValue]=\\\"clonedUser.age\\\"\\n                           [title]=\\\"'Wiek: '\\\"></ac-user-personal-detail>\\n  <ac-user-personal-detail [formControlName]=\\\"userFormName.CITY\\\"\\n                           [oryginalValue]=\\\"clonedUser.city\\\"\\n                           [title]=\\\"'Miasto: '\\\"></ac-user-personal-detail>\\n</mat-list>\\n<button mat-stroked-button\\n        class=\\\"width-100 margin-top-20px\\\"\\n        (click)=\\\"saveChangedUserData()\\\"\\n        color=\\\"accent\\\">\\n  Zapisz zmainy\\n</button>\\n\"","module.exports = \"\"","import { ChangeDetectorRef, Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { IUser } from '../../../shared/interfaces/user.interface';\nimport { Subject } from 'rxjs';\nimport { UserFormName } from '../user-form-name.enum';\nimport { get, isEqual, cloneDeep } from 'lodash';\nimport { UserService } from '../../../core/user/user.service';\nimport { SurveysService } from '../../../core/surveys/surveys.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { IDictionary } from '../../../shared/interfaces/utils.interfaces';\n\n@Component({\n  selector: 'ac-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit, OnDestroy {\n  userFormName = UserFormName;\n  user: IUser;\n  clonedUser: IUser;\n  form: FormGroup;\n  @Output() onSubmit: EventEmitter<IDictionary<string>> = new EventEmitter();\n  private onDestroy: Subject<boolean> = new Subject<boolean>();\n\n  constructor(private userService: UserService,\n              private router: Router,\n              private changeDetectorRef: ChangeDetectorRef,\n              private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n    this.userService.getUser()\n      .pipe(takeUntil(this.onDestroy))\n      .subscribe((user: IUser) => {\n        this.user = user;\n        this.clonedUser = cloneDeep(user);\n\n        this.initForm(user);\n        this.changeDetectorRef.detectChanges();\n      });\n  }\n\n  ngOnDestroy() {\n    this.onDestroy.next();\n    this.onDestroy.complete();\n    this.onDestroy.unsubscribe();\n  }\n\n  saveChangedUserData() {\n    this.onSubmit.emit(this.form.value);\n  }\n\n  private initForm(data?: IUser) {\n    this.form = this.formBuilder.group({\n      [UserFormName.NAME]: get(data, 'name', ''),\n      [UserFormName.SURNAME]: get(data, 'surname', ''),\n      [UserFormName.AGE]: get(data, 'age', ''),\n      [UserFormName.CITY]: get(data, 'city', ''),\n      [UserFormName.EMAIL]: get(data, 'email', ''),\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ISurvey } from '../../shared/interfaces/result.interface';\r\nimport { SurveysService } from '../../core/surveys/surveys.service';\r\n\r\n@Injectable()\r\nexport class SurveysUserResolver implements Resolve<Observable<ISurvey[]>> {\r\n  constructor(private surveysService: SurveysService) {}\r\n\r\n  resolve(): Observable<ISurvey[]> {\r\n    return this.surveysService.fetUserSurveys();\r\n  }\r\n}\r\n","export enum UserFormName {\r\n  NAME = 'name',\r\n  SURNAME = 'surname',\r\n  EMAIL = 'email',\r\n  AGE = 'age',\r\n  CITY = 'city',\r\n}\r\n","module.exports = \"<mat-list-item>\\r\\n  <i (click)=\\\"toggleEditMode()\\\"\\r\\n     class=\\\"cursor-pointer fa fa-pencil padding-right-10\\\"\\r\\n     aria-hidden=\\\"true\\\"></i>\\r\\n  <div mat-line *ngIf=\\\"!isEditMode; else editMode\\\">\\r\\n    <p><b>{{title}}</b> {{value}}</p>\\r\\n    <p *ngIf=\\\"isChanged()\\\"><b>Przed edycją: </b> {{oryginalValue}}</p>\\r\\n  </div>\\r\\n  <ng-template #editMode>\\r\\n    <mat-form-field>\\r\\n      <input  matInput\\r\\n              [placeholder]=\\\"'Przed edycją :' + oryginalValue\\\"\\r\\n              (input)=\\\"saveChanges($event.target.value)\\\"\\r\\n              [value]=\\\"value\\\"/>\\r\\n    </mat-form-field>\\r\\n  </ng-template>\\r\\n</mat-list-item>\\r\\n<mat-divider></mat-divider>\\r\\n\"","module.exports = \".mat-list-item {\\n  height: 80px; }\\n\"","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ControlValueAccessorWrapper } from '../../../../../projects/ac-search-result/src/lib/shared/class/control-value-accessor-wrapper.class';\r\n\r\n@Component({\r\n  selector: 'ac-user-personal-detail',\r\n  templateUrl: './user-personal-detail.component.html',\r\n  styleUrls: ['./user-personal-detail.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: UserPersonalDetailComponent,\r\n    multi: true,\r\n  }],\r\n})\r\nexport class UserPersonalDetailComponent extends ControlValueAccessorWrapper implements ControlValueAccessor {\r\n  @Input() title: string;\r\n  @Input() oryginalValue: string;\r\n  value: string;\r\n  isEditMode: boolean = false;\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\r\n    super();\r\n  }\r\n\r\n  toggleEditMode() {\r\n    this.isEditMode = !this.isEditMode;\r\n  }\r\n\r\n  writeValue(value: string) {\r\n    this.value = value;\r\n  }\r\n\r\n  saveChanges(value: string) {\r\n    this.onChange(value);\r\n    this.writeValue(value);\r\n\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  isChanged(): boolean {\r\n    return this.value !== this.oryginalValue;\r\n  }\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ac-user-wrapper',\r\n  templateUrl: './user-wrapper.component.html',\r\n  styleUrls: ['./user-wrapper.component.scss']\r\n})\r\nexport class UserWrapperComponent {\r\n}\r\n","module.exports = \"<div class=\\\"profile-bg\\\"\\r\\n     [style.background-image]=\\\"'url(' + backgroundUrl + ')'\\\">\\r\\n  <div class=\\\"profile-bg-content\\\">\\r\\n    <h1>Wszystko dotyczące Twojego konta!</h1>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"profile-details-wrapper\\\">\\r\\n  <mat-card class=\\\"profile-details profile-move-up\\\">\\r\\n    <ac-loader *ngIf=\\\"isLoadingUserData; else userData\\\"></ac-loader>\\r\\n    <ng-template #userData>\\r\\n      <ac-edit-user (onSubmit)=\\\"saveChangedUserData($event)\\\"></ac-edit-user>\\r\\n    </ng-template>\\r\\n  </mat-card>\\r\\n\\r\\n  <mat-card *ngIf=\\\"surveys.length\\\"\\r\\n            class=\\\"profile-details\\\">\\r\\n    <mat-list>\\r\\n      <h3 mat-subheader>Ankiety użytkownika: </h3>\\r\\n    </mat-list>\\r\\n    <ac-result class=\\\"main-page-results\\\"\\r\\n               (onSelect)=\\\"selectSurvey($event)\\\"\\r\\n               [elements]=\\\"surveys\\\"></ac-result>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \".profile-move-up {\\n  -webkit-transform: translateY(-20px);\\n          transform: translateY(-20px); }\\n\\n.profile-details {\\n  max-width: 1200px;\\n  margin: auto;\\n  position: relative;\\n  z-index: 10; }\\n\\n.profile-details-wrapper {\\n    padding: 0 30px; }\\n\\n.profile-bg {\\n  position: relative;\\n  height: 60vh;\\n  width: 100vw;\\n  background-position: center;\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.profile-bg-content {\\n    position: absolute;\\n    z-index: 2;\\n    color: #fff;\\n    top: 50%;\\n    left: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%); }\\n\\n.profile-bg-content h1 {\\n      font-size: 50px;\\n      font-weight: 900;\\n      letter-spacing: 3px; }\\n\\n.profile-bg:after {\\n    content: \\\"\\\";\\n    display: block;\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    z-index: 1;\\n    top: 0;\\n    left: 0;\\n    background-color: rgba(0, 0, 0, 0.4); }\\n\\n.margin-top-20px {\\n  margin-top: 20px; }\\n\"","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { UserService } from '../../core/user/user.service';\r\nimport { finalize, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { get, isEqual, cloneDeep } from 'lodash';\r\nimport { IUser } from '../../shared/interfaces/user.interface';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { UserFormName } from './user-form-name.enum';\r\nimport { ISurvey } from '../../shared/interfaces/result.interface';\r\nimport { searchResultMocks } from '../../mocks/search/search-results.mocks';\r\nimport { SurveysService } from '../../core/surveys/surveys.service';\r\nimport { SurveyType } from '../../core/surveys/surveys-type.enum';\r\nimport { Router } from '@angular/router';\r\nimport { IDictionary } from '../../shared/interfaces/utils.interfaces';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UserComponent implements OnInit, OnDestroy {\r\n  backgroundUrl: string = 'assets/mainpage.jpg';\r\n  isLoadingUserData: boolean = false;\r\n  surveys: ISurvey[] = [];\r\n  private onDestroy: Subject<boolean> = new Subject<boolean>();\r\n\r\n  constructor(private userService: UserService,\r\n              private surveysService: SurveysService,\r\n              private router: Router,\r\n              private changeDetectorRef: ChangeDetectorRef,\r\n              private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  saveChangedUserData(values: IDictionary<string>) {\r\n    this.isLoadingUserData = true;\r\n    this.changeDetectorRef.detectChanges();\r\n\r\n    this.userService.updateUser(values).pipe(finalize(() => {\r\n      this.isLoadingUserData = false;\r\n      this.changeDetectorRef.detectChanges();\r\n    })).subscribe();\r\n  }\r\n\r\n  selectSurvey(survey: ISurvey) {\r\n    this.router.navigateByUrl('profile/survey/' + survey.id);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.surveysService.fetUserSurveys().subscribe();\r\n\r\n    this.surveysService.getSurveys(SurveyType.USER)\r\n      .pipe(takeUntil(this.onDestroy))\r\n      .subscribe((surveys: ISurvey[]) => {\r\n        this.surveys = surveys;\r\n\r\n        this.changeDetectorRef.detectChanges();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDestroy.next();\r\n    this.onDestroy.complete();\r\n    this.onDestroy.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatDividerModule, MatExpansionModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule\r\n} from '@angular/material';\r\n\r\nimport { UserComponent } from './user.component';\r\nimport { routes } from './user.routing';\r\nimport { UserPersonalDetailComponent } from './user-personal-detail/user-personal-detail.component';\r\nimport { AcSearchResultModule } from '../../../../projects/ac-search-result/src/lib/ac-search-result.module';\r\nimport { EditSurveyComponent } from './edit-survey/edit-survey.component';\r\nimport { UserWrapperComponent } from './user-wrapper/user-wrapper.component';\r\nimport { CanActivateUserGuard } from '../../core/guards/can-activate-user.guard';\r\nimport { EditSurveyQuestionComponent } from './edit-survey/edit-survey-question/edit-survey-question.component';\r\nimport { EditSurveyEditModeComponent } from './edit-survey/edit-survey-edit-mode/edit-survey-edit-mode.component';\r\nimport { SurveysUserResolver } from './survey-user.resolver';\r\nimport { EditUserComponent } from './edit-user/edit-user.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserComponent,\r\n    UserPersonalDetailComponent,\r\n    EditSurveyComponent,\r\n    UserWrapperComponent,\r\n    EditSurveyQuestionComponent,\r\n    EditSurveyEditModeComponent,\r\n    EditUserComponent\r\n  ],\r\n  providers: [CanActivateUserGuard, SurveysUserResolver],\r\n  imports: [\r\n    MatExpansionModule,\r\n    MatDividerModule,\r\n    MatInputModule,\r\n    CommonModule,\r\n    SharedModule,\r\n    AcSearchResultModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    RouterModule.forChild(routes),\r\n  ],\r\n  bootstrap: [UserWrapperComponent]\r\n})\r\nexport class UserModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { UserComponent } from './user.component';\r\nimport { EditSurveyComponent } from './edit-survey/edit-survey.component';\r\nimport { UserWrapperComponent } from './user-wrapper/user-wrapper.component';\r\nimport { CanActivateUserGuard } from '../../core/guards/can-activate-user.guard';\r\nimport { SurveysUserResolver } from './survey-user.resolver';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserWrapperComponent,\r\n    canActivate: [CanActivateUserGuard],\r\n    resolve: [SurveysUserResolver],\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: UserComponent,\r\n      }, {\r\n        path: 'survey/:id',\r\n        component: EditSurveyComponent,\r\n      }\r\n    ],\r\n  },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n"],"sourceRoot":""}