{"version":3,"sources":["webpack:///./src/app/components/admin/admin-panel/admin-panel.component.html","webpack:///./src/app/components/admin/admin-panel/admin-panel.component.scss","webpack:///./src/app/components/admin/admin-panel/admin-panel.component.ts","webpack:///./src/app/components/admin/admin-surveys.resolver.ts","webpack:///./src/app/components/admin/admin-surveys/admin-surveys.component.html","webpack:///./src/app/components/admin/admin-surveys/admin-surveys.component.scss","webpack:///./src/app/components/admin/admin-surveys/admin-surveys.component.ts","webpack:///./src/app/components/admin/admin.component.html","webpack:///./src/app/components/admin/admin.component.scss","webpack:///./src/app/components/admin/admin.component.ts","webpack:///./src/app/components/admin/admin.module.ts","webpack:///./src/app/components/admin/admin.routing.ts","webpack:///./src/app/components/admin/admin.service.ts","webpack:///./src/app/core/guards/can-activate-admin.guard.ts"],"names":[],"mappings":"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","file":"components-admin-admin-module.js","sourcesContent":["module.exports = \"<div class=\\\"profile-bg\\\"\\r\\n     [style.background-image]=\\\"'url(' + backgroundUrl + ')'\\\">\\r\\n  <div class=\\\"profile-bg-content\\\">\\r\\n    <h1>Panel admina!</h1>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"profile-details-wrapper profile-move-up profile-details\\\">\\r\\n  <mat-expansion-panel>\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Ankiety niezaakceptowane:\\r\\n      </mat-panel-title>\\r\\n    </mat-expansion-panel-header>\\r\\n    <ng-container *ngIf=\\\"surveys.notAccepted.length\\\">\\r\\n      <ac-result class=\\\"main-page-results\\\"\\r\\n                 (onSelect)=\\\"selectSurvey($event)\\\"\\r\\n                 [elements]=\\\"surveys.notAccepted\\\"></ac-result>\\r\\n    </ng-container>\\r\\n  </mat-expansion-panel>\\r\\n\\r\\n\\r\\n  <mat-expansion-panel class=\\\"margin-top-20px\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Ankiety zaakceptowane:\\r\\n      </mat-panel-title>\\r\\n    </mat-expansion-panel-header>\\r\\n    <ng-container *ngIf=\\\"surveys.accepted.length\\\">\\r\\n      <ac-result class=\\\"main-page-results\\\"\\r\\n                 (onSelect)=\\\"selectSurvey($event)\\\"\\r\\n                 [elements]=\\\"surveys.accepted\\\"></ac-result>\\r\\n    </ng-container>\\r\\n  </mat-expansion-panel>\\r\\n</div>\\r\\n\"","module.exports = \".profile-move-up {\\n  -webkit-transform: translateY(-20px);\\n          transform: translateY(-20px); }\\n\\n.profile-details {\\n  max-width: 1200px;\\n  margin: auto;\\n  position: relative;\\n  z-index: 10; }\\n\\n.profile-details-wrapper {\\n    padding: 0 30px; }\\n\\n.profile-bg {\\n  position: relative;\\n  height: 60vh;\\n  width: 100vw;\\n  background-position: center;\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.profile-bg-content {\\n    position: absolute;\\n    z-index: 2;\\n    color: #fff;\\n    top: 50%;\\n    left: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%); }\\n\\n.profile-bg-content h1 {\\n      font-size: 50px;\\n      font-weight: 900;\\n      letter-spacing: 3px; }\\n\\n.profile-bg:after {\\n    content: \\\"\\\";\\n    display: block;\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    z-index: 1;\\n    top: 0;\\n    left: 0;\\n    background-color: rgba(0, 0, 0, 0.4); }\\n\\n.margin-top-20px {\\n  margin-top: 20px; }\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ISurvey } from '../../../shared/interfaces/result.interface';\r\nimport { Subject } from 'rxjs';\r\nimport { AdminService } from '../admin.service';\r\nimport { Router } from '@angular/router';\r\nimport { SurveyType } from '../../../core/surveys/surveys-type.enum';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'ac-admin-panel',\r\n  templateUrl: './admin-panel.component.html',\r\n  styleUrls: ['./admin-panel.component.scss']\r\n})\r\nexport class AdminPanelComponent implements OnInit, OnDestroy {\r\n  backgroundUrl: string = 'assets/mainpage.jpg';\r\n  surveys: {accepted: ISurvey[], notAccepted: ISurvey[]} = {accepted: [], notAccepted: []};\r\n  private onDestroy: Subject<boolean> = new Subject<boolean>();\r\n\r\n  constructor(private adminService: AdminService,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.adminService.getSurveys(SurveyType.NOT_ACCEPTED)\r\n      .pipe(takeUntil(this.onDestroy))\r\n      .subscribe((surveys: ISurvey[]) => this.surveys.notAccepted = surveys);\r\n\r\n    this.adminService.getSurveys(SurveyType.ACCEPTED)\r\n      .pipe(takeUntil(this.onDestroy))\r\n      .subscribe((surveys: ISurvey[]) => this.surveys.accepted = surveys);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.onDestroy.next();\r\n    this.onDestroy.complete();\r\n    this.onDestroy.unsubscribe();\r\n  }\r\n\r\n  selectSurvey(survey: ISurvey) {\r\n    this.router.navigateByUrl('admin/survey/' + survey.id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ISurvey } from '../../shared/interfaces/result.interface';\r\nimport { AdminService } from './admin.service';\r\n\r\n@Injectable()\r\nexport class AdminSurveysResolver implements Resolve<Observable<ISurvey[]>> {\r\n  constructor(private adminService: AdminService) {}\r\n\r\n  resolve(): Observable<ISurvey[]> {\r\n    return this.adminService.fetchAdminSurveys();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"profile-bg\\\"\\r\\n     [style.background-image]=\\\"'url(' + backgroundUrl + ')'\\\">\\r\\n  <div class=\\\"profile-bg-content\\\">\\r\\n    <h1>Podgląd ankiety: {{survey?.response.title}}</h1>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"profile-details-wrapper\\\">\\r\\n  <mat-card class=\\\"profile-details profile-move-up profile-detail\\\">\\r\\n    <mat-expansion-panel>\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          Podgląd pytań:\\r\\n        </mat-panel-title>\\r\\n      </mat-expansion-panel-header>\\r\\n      <ac-loader *ngIf=\\\"isLoading; else loadedAdata\\\"></ac-loader>\\r\\n      <ng-template #loadedAdata>\\r\\n        <div *ngFor=\\\"let question of survey?.response.question; let i = index\\\">\\r\\n          <div class=\\\"edit-wrapper\\\">\\r\\n            <mat-divider></mat-divider>\\r\\n            <div class=\\\"padding-bottom-10px padding-top-10px\\\">\\r\\n              <p><b>Pytanie: </b>{{question.content}}</p>\\r\\n            </div>\\r\\n            <mat-divider></mat-divider>\\r\\n            <p class=\\\"padding-top-10px\\\"><b> Odpowiedzi: </b></p>\\r\\n            <div *ngFor=\\\"let answer of question.answers; let i = index\\\">\\r\\n              <p> {{i + 1}}) {{answer.content}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n    </mat-expansion-panel>\\r\\n  </mat-card>\\r\\n</div>\\r\\n<button *ngIf=\\\"!isAccetped()\\\"\\r\\n        (click)=\\\"acceptSurvey()\\\"\\r\\n        mat-flat-button\\r\\n        class=\\\"fixed-on-left\\\"\\r\\n        color=\\\"primary\\\">Akceptuj ankietę</button>\\r\\n\"","module.exports = \".fixed-on-left {\\n  position: fixed;\\n  left: 20px;\\n  bottom: 20px;\\n  z-index: 444; }\\n\\n.profile-move-up {\\n  -webkit-transform: translateY(-20px);\\n          transform: translateY(-20px); }\\n\\n.profile-details {\\n  max-width: 1200px;\\n  margin: auto;\\n  position: relative;\\n  z-index: 10; }\\n\\n.profile-details-wrapper {\\n    padding: 0 30px; }\\n\\n.profile-bg {\\n  position: relative;\\n  height: 60vh;\\n  width: 100vw;\\n  background-position: center;\\n  background-repeat: no-repeat;\\n  background-size: cover; }\\n\\n.profile-bg-content {\\n    position: absolute;\\n    z-index: 2;\\n    color: #fff;\\n    top: 50%;\\n    left: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%); }\\n\\n.profile-bg-content h1 {\\n      font-size: 50px;\\n      font-weight: 900;\\n      letter-spacing: 3px; }\\n\\n.profile-bg:after {\\n    content: \\\"\\\";\\n    display: block;\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    z-index: 1;\\n    top: 0;\\n    left: 0;\\n    background-color: rgba(0, 0, 0, 0.4); }\\n\\n.margin-top-20px {\\n  margin-top: 20px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { find, get, isNil, toNumber, cloneDeep } from 'lodash';\r\nimport { SurveyType } from '../../../core/surveys/surveys-type.enum';\r\nimport { ISurvey } from '../../../shared/interfaces/result.interface';\r\nimport { AdminService } from '../admin.service';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'ac-admin-surveys',\r\n  templateUrl: './admin-surveys.component.html',\r\n  styleUrls: ['./admin-surveys.component.scss']\r\n})\r\nexport class AdminSurveysComponent implements OnInit {\r\n  backgroundUrl: string = 'assets/mainpage.jpg';\r\n  survey: ISurvey;\r\n  isLoading: boolean = false;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n              private adminService: AdminService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe((params: ParamMap) => {\r\n      this.updateSurvey(toNumber(params.get('id')));\r\n    });\r\n  }\r\n\r\n  isAccetped() {\r\n    return get(this.survey, 'response.accept');\r\n  }\r\n\r\n  acceptSurvey() {\r\n    this.isLoading = true;\r\n\r\n    this.adminService.acceptSurvey(this.survey.id as number).pipe(finalize(() => {\r\n      this.isLoading = false;\r\n\r\n      this.updateSurvey(this.survey.id as number);\r\n    })).subscribe();\r\n  }\r\n\r\n  private updateSurvey(id: number) {\r\n    this.survey = find(this.adminService.getSurveysValue(SurveyType.ALL), {id});\r\n\r\n    if(isNil(this.survey)) {\r\n      this.router.navigateByUrl('admin');\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ac-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminComponent } from './admin.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { routes } from './admin.routing';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AdminSurveysComponent } from './admin-surveys/admin-surveys.component';\r\nimport {\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatIconModule, MatInputModule,\r\n  MatListModule\r\n} from '@angular/material';\r\nimport { AcSearchResultModule } from '../../../../projects/ac-search-result/src/lib/ac-search-result.module';\r\nimport { AdminPanelComponent } from './admin-panel/admin-panel.component';\r\nimport { AdminSurveysResolver } from './admin-surveys.resolver';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminComponent,\r\n    AdminSurveysComponent,\r\n    AdminPanelComponent,\r\n  ],\r\n  providers: [AdminSurveysResolver],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    AcSearchResultModule,\r\n    MatExpansionModule,\r\n    MatDividerModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    RouterModule.forChild(routes),\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { CanActivateUserGuard } from '../../core/guards/can-activate-user.guard';\r\nimport { AdminComponent } from './admin.component';\r\nimport { CanActivateAdminGuard } from '../../core/guards/can-activate-admin.guard';\r\nimport { AdminSurveysComponent } from './admin-surveys/admin-surveys.component';\r\nimport { AdminPanelComponent } from './admin-panel/admin-panel.component';\r\nimport { AdminSurveysResolver } from './admin-surveys.resolver';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminComponent,\r\n    canActivate: [CanActivateUserGuard, CanActivateAdminGuard],\r\n    resolve: [AdminSurveysResolver],\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: AdminPanelComponent,\r\n      }, {\r\n        path: 'survey/:id',\r\n        component: AdminSurveysComponent,\r\n      }\r\n    ],\r\n  },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { SurveyType } from '../../core/surveys/surveys-type.enum';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\nimport { ISurvey, ISurveyResponse } from '../../shared/interfaces/result.interface';\r\nimport { HttpService } from '../../core/http/http.service';\r\nimport { AlertService } from 'ngx-alerts';\r\nimport { filter } from 'lodash';\r\nimport { RequestsContants } from '../../shared/constants/requests.contants';\r\nimport { RequestTypes } from '../../core/http/http.enum';\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { SurveysService } from '../../core/surveys/surveys.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  private surveys: {\r\n    [SurveyType.ALL]: BehaviorSubject<ISurvey[]>,\r\n    [SurveyType.ACCEPTED]: BehaviorSubject<ISurvey[]>,\r\n    [SurveyType.NOT_ACCEPTED]: BehaviorSubject<ISurvey[]>,\r\n  } = {\r\n    [SurveyType.ALL]: new BehaviorSubject([]),\r\n    [SurveyType.ACCEPTED]: new BehaviorSubject([]),\r\n    [SurveyType.NOT_ACCEPTED]: new BehaviorSubject([]),\r\n  };\r\n\r\n  constructor(private httpService: HttpService,\r\n              private surveysService: SurveysService,\r\n              private alertService: AlertService) {\r\n  }\r\n\r\n  getSurveys(type: SurveyType = SurveyType.ALL): BehaviorSubject<ISurvey[]> {\r\n    return this.surveys[type];\r\n  }\r\n\r\n  getSurveysValue(type: SurveyType = SurveyType.ALL): ISurvey[] {\r\n    return this.getSurveys(type).value;\r\n  }\r\n\r\n  setSurveys(surveys: ISurvey[], type: SurveyType = SurveyType.ALL) {\r\n    this.getSurveys(type).next(surveys);\r\n  }\r\n\r\n  fetchAdminSurveys(): Observable<ISurvey[]> {\r\n    return this.httpService.httpRequest(RequestsContants.SURVEYS.ADMIN_LIST, RequestTypes.GET).pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n        this.alertService.danger(err.statusText);\r\n\r\n        return throwError({});\r\n      }),\r\n      map((surveys: HttpResponse<ISurveyResponse[]>) => this.surveysService.mapSurveys(surveys)),\r\n      tap((response: ISurvey[]) => {\r\n        this.setSurveys(response);\r\n        this.setSurveys(filter(response, (survey: ISurvey) => !survey.response.accept), SurveyType.NOT_ACCEPTED);\r\n        this.setSurveys(filter(response, (survey: ISurvey) => survey.response.accept), SurveyType.ACCEPTED);\r\n      })\r\n    );\r\n  }\r\n\r\n  acceptSurvey(id: number): Observable<ISurvey[]> {\r\n    return this.httpService.httpRequest(RequestsContants.SURVEYS.ACCEPT(id), RequestTypes.POST).pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n        this.alertService.danger(err.statusText);\r\n\r\n        return throwError({});\r\n      }),\r\n      map((response: HttpResponse<{message: string}>) => response.body.message),\r\n      tap((message: string) => {\r\n        this.alertService.success(message);\r\n      }),\r\n      switchMap(() => this.fetchAdminSurveys())\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { find, get } from 'lodash';\r\nimport { UserService } from '../user/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CanActivateAdminGuard implements CanActivate {\r\n  constructor(private router: Router,\r\n              private userService: UserService) {\r\n  }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot,\r\n              state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    const canActive: boolean = this.userService.isAdmin();\r\n\r\n    if(!canActive) {\r\n      this.router.navigateByUrl('');\r\n    }\r\n\r\n    return canActive;\r\n  }\r\n}\r\n"],"sourceRoot":""}